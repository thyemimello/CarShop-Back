openapi: 3.0.3
info:
  title: CArShop
  version: 1.0.0
  description: Sua Loja de carro
paths:
  /advertisements/:
    get:
      operationId: advertisements_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - advertisements
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAdvertusementsList'
          description: ''
    post:
      operationId: advertisements_create
      tags:
      - advertisements
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Advertusements'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Advertusements'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Advertusements'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Advertusements'
          description: ''
  /advertisements/{id}:
    get:
      operationId: advertisements_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - advertisements
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Advertusements'
          description: ''
    put:
      operationId: advertisements_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - advertisements
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Advertusements'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Advertusements'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Advertusements'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Advertusements'
          description: ''
    patch:
      operationId: advertisements_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - advertisements
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdvertusements'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdvertusements'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdvertusements'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Advertusements'
          description: ''
    delete:
      operationId: advertisements_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - advertisements
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /comment/{id}/:
    get:
      operationId: comment_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - comment
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCommentList'
          description: ''
    post:
      operationId: comment_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - comment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
  /comment/{id}/update:
    get:
      operationId: comment_update_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - comment
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    put:
      operationId: comment_update_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - comment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    patch:
      operationId: comment_update_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - comment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedComment'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    delete:
      operationId: comment_update_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - comment
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /users/:
    get:
      operationId: users_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: users_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /users/{id}/:
    get:
      operationId: users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /users/login/:
    post:
      operationId: users_login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
components:
  schemas:
    Advertusements:
      type: object
      properties:
        brand:
          type: string
          maxLength: 60
        model:
          type: string
          maxLength: 120
        year:
          type: integer
          nullable: true
        fuel:
          type: string
          maxLength: 20
        color:
          type: string
          maxLength: 20
        quilometers:
          type: integer
          nullable: true
        price:
          type: integer
          nullable: true
        cover_img:
          type: string
          maxLength: 150
        description:
          type: string
          maxLength: 250
        is_avaliable:
          type: boolean
        user_id:
          type: integer
          readOnly: true
          nullable: true
      required:
      - brand
      - color
      - cover_img
      - description
      - fuel
      - model
      - user_id
    Comment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        comment:
          type: string
          maxLength: 300
        user_comment_id:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        advertisement:
          type: integer
          readOnly: true
          nullable: true
      required:
      - advertisement
      - comment
      - created_at
      - id
      - user_comment_id
    PaginatedAdvertusementsList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Advertusements'
    PaginatedCommentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PatchedAdvertusements:
      type: object
      properties:
        brand:
          type: string
          maxLength: 60
        model:
          type: string
          maxLength: 120
        year:
          type: integer
          nullable: true
        fuel:
          type: string
          maxLength: 20
        color:
          type: string
          maxLength: 20
        quilometers:
          type: integer
          nullable: true
        price:
          type: integer
          nullable: true
        cover_img:
          type: string
          maxLength: 150
        description:
          type: string
          maxLength: 250
        is_avaliable:
          type: boolean
        user_id:
          type: integer
          readOnly: true
          nullable: true
    PatchedComment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        comment:
          type: string
          maxLength: 300
        user_comment_id:
          type: integer
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        advertisement:
          type: integer
          readOnly: true
          nullable: true
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          maxLength: 60
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          writeOnly: true
          minLength: 8
          maxLength: 150
        cpf:
          type: string
          maxLength: 11
        brithdate:
          type: string
          format: date
        profile_img:
          type: string
          maxLength: 127
        is_advertiser:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          maxLength: 60
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          writeOnly: true
          minLength: 8
          maxLength: 150
        cpf:
          type: string
          maxLength: 11
        brithdate:
          type: string
          format: date
        profile_img:
          type: string
          maxLength: 127
        is_advertiser:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - brithdate
      - cpf
      - created_at
      - email
      - id
      - is_advertiser
      - password
      - profile_img
      - updated_at
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
